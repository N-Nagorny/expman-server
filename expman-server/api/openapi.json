{
  "openapi": "3.0.0",
  "info": {
    "title": "ExpMan server HTTP RESTful API specification",
    "version": "1.0.0"
  },
  "paths": {
    "/api/expenses": {
      "get": {
        "summary": "List all expenses",
        "operationId": "getAllExpenses",
        "responses": {
          "200": {
            "description": "An array of expenses",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Expenses"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add an expense",
        "operationId": "addExpense",
        "requestBody": {
          "description": "Information about a new expense",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Expense"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        }
      }
    },
    "/api/purchases": {
      "get": {
        "summary": "List all purchases",
        "operationId": "getAllPurchases",
        "responses": {
          "200": {
            "description": "An array of purchases",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Purchases"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a purchase",
        "operationId": "addPurchase",
        "requestBody": {
          "description": "Information about a new purchase",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Purchase"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The purchase is added successfully"
          }
        }
      }
    },
    "/api/expenses/{id}": {
      "put": {
        "summary": "Replace a specific expense with another one",
        "operationId": "replaceExpense",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of expense to replace",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The expense is replaced successfully"
          }
        }
      }
    },
    "/api/purchases/{id}": {
      "delete": {
        "summary": "Delete a purchase",
        "operationId": "deletePurchase",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of purchase to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a 200 status to indicate that the purchase is deleted successfully."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "required": [
          "username",
          "password"
        ],
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "Purchase": {
        "required": [
          "name",
          "type",
          "is_mandatory",
          "is_single_time"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "is_mandatory": {
            "type": "boolean"
          },
          "is_single_time": {
            "type": "boolean"
          }
        }
      },
      "Expense": {
        "required": [
          "name",
          "type",
          "is_mandatory",
          "is_single_time",
          "cost"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "is_mandatory": {
            "type": "boolean"
          },
          "is_single_time": {
            "type": "boolean"
          },
          "commentary": {
            "type": "string"
          },
          "cost": {
            "type": "number",
            "format": "float"
          },
          "next_id": {
            "description": "ID of the next version of the expense",
            "type": "integer"
          }
        }
      },
      "Expenses": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Expense"
        }
      },
      "Purchases": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Purchase"
        }
      }
    }
  }
}